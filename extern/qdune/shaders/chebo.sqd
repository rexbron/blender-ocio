# the logic version
# surface chebo(color white_color = 1, black_color = 0;)
# {
# 	point PP = transform("shader", P);
# 	float x = mod(xcomp(PP), 1);
# 	float y = mod(ycomp(PP), 1);
# 	float z = mod(zcomp(PP), 1);
# 	if (x < 0) x += 1;
# 	if (y < 0) y += 1;
# 	if (z < 0) z += 1;
# 	if (((x <= 0.5) && (y <= 0.5) && (z <= 0.5)) ||
# 	    ((x > 0.5) && (y > 0.5) && (z <= 0.5)) ||
# 	    ((x <= 0.5) && (y > 0.5) && (z > 0.5)) ||
# 	    ((x > 0.5) && (y <= 0.5) && (z > 0.5)))
# 		Ci = white_color;
# 	else
# 		Ci = black_color;
# 	Ci *= Cs * diffuse(faceforward(normalize(N), I));
# 	Oi = Os;
# 	Ci *= Oi;
# }
surface chebo
param color white_color 1 1 1
param color black_color 0 0 0
temp point PP
temp float x
temp float y
temp float z
const float $1 1
const float $2 0
const float $3 0.5
temp normal $4
temp color $5
temp bool $6
temp bool $7
global P Ci Cs Oi Os N I
codesegment
	ptransform1	PP "shader" P
	xcomp				x PP
	mod					x x $1
	ycomp				y PP
	mod					y y $1
	zcomp				z PP
	mod					z z $1
	ifltff			$6 x $2
	cond_push		$6
	addfff			x x $1
	cond_reset
	ifltff			$6 y	$2
	cond_push		$6
	addfff			y y $1
	cond_reset
	ifltff			$6 z $2
	cond_push		$6
	addfff			z z $1
	cond_reset
	ifleff			$6 x $3
	andleff			$6 y $3
	andleff			$6 z $3
	ifgtff			$7 x $3
	andgtff			$7 y $3
	andleff			$7 z $3
	or					$6 $6 $7
	ifleff			$7 x $3
	andgtff			$7 y $3
	andgtff			$7 z $3
	or					$6 $6 $7
	ifgtff			$7 x $3
	andleff			$7 y $3
	andgtff			$7 z $3
	or					$6 $6 $7
	cond_push		$6
	movvv				Ci white_color
	cond_else
	movvv				Ci black_color
	cond_reset
	normalize			$4 N
	faceforward1	$4 $4 I
	diffuse				$5 $4
	mulvvv				$5 $5 Cs
	mulvvv				Ci Ci $5
	movvv					Oi Os
	mulvvv				Ci Ci Oi
	return
