surface wood2
param uniform float Ka 1
param uniform float Kd 0.75
param uniform float Ks 0.4
param uniform float roughness 0.1
param uniform float ringscale 15
param uniform float txtscale 1
param uniform color lightwood 0.69 0.44 0.25
param uniform color darkwood 0.35 0.22 0.08
param uniform float grainy 1
temp vector PP
temp float my_t
temp vector PQ
temp float r
temp float r2
temp color Ct
temp normal Nf
temp float $1
const float $2 0.75
const float $3 0.8
const float $4 1
temp float $5
const float $6 0.2
const float $7 0.55
const float $8 1.3
temp normal $9
temp vector $10
temp vector $11
temp point $12
const string $13 "shader"
global P N I Cs Os Ci Oi
codesegment
	# point PP = txtscale * transform ("shader", P);
	ptransform1	$12 $13 P
	mulvvf		PP $12 txtscale
	# float my_t = zcomp(PP) / ringscale;
	zcomp		$1 PP
	divfff		my_t my_t ringscale
	# point PQ = point (xcomp(PP)*8, ycomp(PP)*8, zcomp(PP));
	xcomp		$1 PP
	mulfff		$1 $1 8
	setxcomp	PQ $1
	ycomp		$1 PP
	mulfff		$1 $1 8
	setycomp	PQ $1
	zcomp		$1 PP
	setzcomp	PQ $1
	# my_t += noise (PQ) / 16;
	noise3f		$1 PQ
	maddfff		my_t $1 0.0625
	# PQ = point (xcomp(PP), my_t, ycomp(PP)+12.93);
	xcomp		$1 PP
	setxcomp	PQ $1
	setycomp	PQ my_t
	ycomp		$1 PP
	addfff		$1 $1 12.93
	setzcomp	PQ $1
	# float r = ringscale * noise (PQ);
	noise3f		$1 PQ
	mulfff		r ringscale $1
	# r -= floor (r);
	floor		$1 r
	subfff		r r $1
	# r = 0.2 + 0.8 * smoothstep(0.2, 0.55, r) * (1 - smoothstep(0.75, 0.8, r));
	smoothstep	$1 $2 $3 r
	subfff		$1 $4 $1
	smoothstep	$5 $6 $7 r
	mulfff		$1 $1 $5
	mulfff		$1 $1 0.8
	addfff		r $1 0.2
	# PQ = point (xcomp(PP)*128+5, zcomp(PP)*8-3, ycomp(PP)*128+1);
	ycomp		$1 PP
	mulfff		$1 $1 128
	addfff		$1 $1 $4
	setzcomp	PQ $1
	zcomp		$1 PP
	mulfff		$1 $1 8
	subfff		$1 $1 3
	setycomp	PQ $1
	xcomp		$1 PP
	mulfff		$1 $1 128
	addfff		$1 $1 5
	setxcomp	PQ $1
	# float r2 = grainy * (1.3 - noise (PQ)) + (1-grainy);
	subfff		$1 $4 grainy
	noise3f		$5 PQ
	subfff		$5 $8 $5
	mulfff		$5 grainy $5
	addfff		r2 $5 $1
	# color Ct = mix (lightwood, darkwood, r*r2*r2);
	mulfff		$1 r2 r2
	mulfff		$1 $1 r
	mixv	Ct lightwood darkwood $1
	# normal Nf = faceforward (normalize(N),I);
	normalize	$9 N
	faceforward1	Nf $9 I
	# Ci = MaterialPlastic (Nf, Ct, Ka, Kd, Ks, roughness);
	# just relevant copy of plastic shader here
	diffuse		$10 Nf
	mulvvf		$10 $10 Kd
	ambient		$11
	maddvvf		$10 $11 Ka
	mulvvv		$10 $10 Cs
	normalize	$11 I
	negvv		$11 $11
	specular	$11 Nf $11 roughness
	maddvvf		$10 $11 Ks
	mulvvv		Ci $10 Ct
	# Oi = Os;  Ci *= Oi;
	movvv		Oi Os
	mulvvv		Ci Ci Oi	
	return
