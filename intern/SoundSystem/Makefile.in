# Makefile.in generated by automake 1.7 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BlenderGAME_FALSE = @BlenderGAME_FALSE@
BlenderGAME_TRUE = @BlenderGAME_TRUE@
BlenderOPENAL_FALSE = @BlenderOPENAL_FALSE@
BlenderOPENAL_TRUE = @BlenderOPENAL_TRUE@
BlenderSTATIC_FALSE = @BlenderSTATIC_FALSE@
BlenderSTATIC_TRUE = @BlenderSTATIC_TRUE@
CARBON_FALSE = @CARBON_FALSE@
CARBON_TRUE = @CARBON_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHONSYSPREFIX = @PYTHONSYSPREFIX@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WIN_FALSE = @WIN_FALSE@
WIN_TRUE = @WIN_TRUE@
X11_FALSE = @X11_FALSE@
X11_TRUE = @X11_TRUE@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
noinst_LIBRARIES = libgameblender_soundsystem.la


#there is a test file for those who want to build it... as long as you edit this file

#note fmod might be a windows only file as it includes from the windows library
libgameblender_soundsystem_la_SOURCES = \
	dummy/SND_DummyDevice.cpp \
	fmod/SND_FmodDevice.cpp \
	intern/SND_AudioDevice.cpp \
	intern/SND_C-api.cpp \
	intern/SND_CDObject.cpp \
	intern/SND_DeviceManager.cpp \
	intern/SND_IdObject.cpp \
	intern/SND_Scene.cpp \
	intern/SND_SoundListener.cpp \
	intern/SND_SoundObject.cpp \
	intern/SND_Utils.cpp \
	intern/SND_WaveCache.cpp \
	intern/SND_WaveSlot.cpp \
	openal/SND_OpenALDevice.cpp \
	openal/pthread_cancel.cpp


INCLUDES = -I$(top_srcdir)/lib/windows/fmod/include \
	-I$(top_srcdir)/source/gameengine/SoundSystem/intern \
	-I$(top_srcdir)/intern/moto/include \
	-I$(top_srcdir)/intern/string \
	-I$(top_srcdir)/source/kernel/gen_system \
	-I$(top_srcdir)/source/gameengine/SoundSystem/dummy \
	-I$(top_srcdir)/source/gameengine/SoundSystem/openal

subdir = source/gameengine/SoundSystem
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libgameblender_soundsystem_la_AR = $(AR) cru
libgameblender_soundsystem_la_LIBADD =
am_libgameblender_soundsystem_la_OBJECTS = SND_FmodDevice.lo \
	SND_AudioDevice.lo SND_C-api.lo SND_CDObject.lo \
	SND_DeviceManager.lo SND_IdObject.lo SND_Scene.lo \
	SND_SoundListener.lo SND_SoundObject.lo SND_Utils.lo \
	SND_WaveCache.lo SND_WaveSlot.lo SND_OpenALDevice.lo \
	pthread_cancel.lo
libgameblender_soundsystem_la_OBJECTS = \
	$(am_libgameblender_soundsystem_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/SND_AudioDevice.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_C-api.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_CDObject.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_DeviceManager.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_FmodDevice.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_IdObject.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_OpenALDevice.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_Scene.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_SoundListener.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_SoundObject.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_Utils.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_WaveCache.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SND_WaveSlot.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/pthread_cancel.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libgameblender_soundsystem_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libgameblender_soundsystem_la_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/gameengine/SoundSystem/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
SND_FmodDevice.lo: fmod/SND_FmodDevice.cpp
SND_AudioDevice.lo: intern/SND_AudioDevice.cpp
SND_C-api.lo: intern/SND_C-api.cpp
SND_CDObject.lo: intern/SND_CDObject.cpp
SND_DeviceManager.lo: intern/SND_DeviceManager.cpp
SND_IdObject.lo: intern/SND_IdObject.cpp
SND_Scene.lo: intern/SND_Scene.cpp
SND_SoundListener.lo: intern/SND_SoundListener.cpp
SND_SoundObject.lo: intern/SND_SoundObject.cpp
SND_Utils.lo: intern/SND_Utils.cpp
SND_WaveCache.lo: intern/SND_WaveCache.cpp
SND_WaveSlot.lo: intern/SND_WaveSlot.cpp
SND_OpenALDevice.lo: openal/SND_OpenALDevice.cpp
pthread_cancel.lo: openal/pthread_cancel.cpp
libgameblender_soundsystem.la: $(libgameblender_soundsystem_la_OBJECTS) $(libgameblender_soundsystem_la_DEPENDENCIES) 
	-rm -f libgameblender_soundsystem.la
	$(libgameblender_soundsystem_la_AR) libgameblender_soundsystem.la $(libgameblender_soundsystem_la_OBJECTS) $(libgameblender_soundsystem_la_LIBADD)
	$(RANLIB) libgameblender_soundsystem.la

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_AudioDevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_C-api.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_CDObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_DeviceManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_FmodDevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_IdObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_OpenALDevice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_Scene.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_SoundListener.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_SoundObject.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_Utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_WaveCache.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SND_WaveSlot.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pthread_cancel.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

SND_FmodDevice.o: fmod/SND_FmodDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_FmodDevice.o -MD -MP -MF "$(DEPDIR)/SND_FmodDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_FmodDevice.o `test -f 'fmod/SND_FmodDevice.cpp' || echo '$(srcdir)/'`fmod/SND_FmodDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_FmodDevice.Tpo" "$(DEPDIR)/SND_FmodDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_FmodDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmod/SND_FmodDevice.cpp' object='SND_FmodDevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_FmodDevice.Po' tmpdepfile='$(DEPDIR)/SND_FmodDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_FmodDevice.o `test -f 'fmod/SND_FmodDevice.cpp' || echo '$(srcdir)/'`fmod/SND_FmodDevice.cpp

SND_FmodDevice.obj: fmod/SND_FmodDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_FmodDevice.obj -MD -MP -MF "$(DEPDIR)/SND_FmodDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_FmodDevice.obj `if test -f 'fmod/SND_FmodDevice.cpp'; then $(CYGPATH_W) 'fmod/SND_FmodDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/fmod/SND_FmodDevice.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_FmodDevice.Tpo" "$(DEPDIR)/SND_FmodDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_FmodDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmod/SND_FmodDevice.cpp' object='SND_FmodDevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_FmodDevice.Po' tmpdepfile='$(DEPDIR)/SND_FmodDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_FmodDevice.obj `if test -f 'fmod/SND_FmodDevice.cpp'; then $(CYGPATH_W) 'fmod/SND_FmodDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/fmod/SND_FmodDevice.cpp'`

SND_FmodDevice.lo: fmod/SND_FmodDevice.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_FmodDevice.lo -MD -MP -MF "$(DEPDIR)/SND_FmodDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_FmodDevice.lo `test -f 'fmod/SND_FmodDevice.cpp' || echo '$(srcdir)/'`fmod/SND_FmodDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_FmodDevice.Tpo" "$(DEPDIR)/SND_FmodDevice.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_FmodDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmod/SND_FmodDevice.cpp' object='SND_FmodDevice.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_FmodDevice.Plo' tmpdepfile='$(DEPDIR)/SND_FmodDevice.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_FmodDevice.lo `test -f 'fmod/SND_FmodDevice.cpp' || echo '$(srcdir)/'`fmod/SND_FmodDevice.cpp

SND_AudioDevice.o: intern/SND_AudioDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_AudioDevice.o -MD -MP -MF "$(DEPDIR)/SND_AudioDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_AudioDevice.o `test -f 'intern/SND_AudioDevice.cpp' || echo '$(srcdir)/'`intern/SND_AudioDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_AudioDevice.Tpo" "$(DEPDIR)/SND_AudioDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_AudioDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_AudioDevice.cpp' object='SND_AudioDevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_AudioDevice.Po' tmpdepfile='$(DEPDIR)/SND_AudioDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_AudioDevice.o `test -f 'intern/SND_AudioDevice.cpp' || echo '$(srcdir)/'`intern/SND_AudioDevice.cpp

SND_AudioDevice.obj: intern/SND_AudioDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_AudioDevice.obj -MD -MP -MF "$(DEPDIR)/SND_AudioDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_AudioDevice.obj `if test -f 'intern/SND_AudioDevice.cpp'; then $(CYGPATH_W) 'intern/SND_AudioDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_AudioDevice.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_AudioDevice.Tpo" "$(DEPDIR)/SND_AudioDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_AudioDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_AudioDevice.cpp' object='SND_AudioDevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_AudioDevice.Po' tmpdepfile='$(DEPDIR)/SND_AudioDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_AudioDevice.obj `if test -f 'intern/SND_AudioDevice.cpp'; then $(CYGPATH_W) 'intern/SND_AudioDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_AudioDevice.cpp'`

SND_AudioDevice.lo: intern/SND_AudioDevice.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_AudioDevice.lo -MD -MP -MF "$(DEPDIR)/SND_AudioDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_AudioDevice.lo `test -f 'intern/SND_AudioDevice.cpp' || echo '$(srcdir)/'`intern/SND_AudioDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_AudioDevice.Tpo" "$(DEPDIR)/SND_AudioDevice.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_AudioDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_AudioDevice.cpp' object='SND_AudioDevice.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_AudioDevice.Plo' tmpdepfile='$(DEPDIR)/SND_AudioDevice.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_AudioDevice.lo `test -f 'intern/SND_AudioDevice.cpp' || echo '$(srcdir)/'`intern/SND_AudioDevice.cpp

SND_C-api.o: intern/SND_C-api.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_C-api.o -MD -MP -MF "$(DEPDIR)/SND_C-api.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_C-api.o `test -f 'intern/SND_C-api.cpp' || echo '$(srcdir)/'`intern/SND_C-api.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_C-api.Tpo" "$(DEPDIR)/SND_C-api.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_C-api.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_C-api.cpp' object='SND_C-api.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_C-api.Po' tmpdepfile='$(DEPDIR)/SND_C-api.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_C-api.o `test -f 'intern/SND_C-api.cpp' || echo '$(srcdir)/'`intern/SND_C-api.cpp

SND_C-api.obj: intern/SND_C-api.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_C-api.obj -MD -MP -MF "$(DEPDIR)/SND_C-api.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_C-api.obj `if test -f 'intern/SND_C-api.cpp'; then $(CYGPATH_W) 'intern/SND_C-api.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_C-api.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_C-api.Tpo" "$(DEPDIR)/SND_C-api.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_C-api.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_C-api.cpp' object='SND_C-api.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_C-api.Po' tmpdepfile='$(DEPDIR)/SND_C-api.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_C-api.obj `if test -f 'intern/SND_C-api.cpp'; then $(CYGPATH_W) 'intern/SND_C-api.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_C-api.cpp'`

SND_C-api.lo: intern/SND_C-api.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_C-api.lo -MD -MP -MF "$(DEPDIR)/SND_C-api.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_C-api.lo `test -f 'intern/SND_C-api.cpp' || echo '$(srcdir)/'`intern/SND_C-api.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_C-api.Tpo" "$(DEPDIR)/SND_C-api.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_C-api.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_C-api.cpp' object='SND_C-api.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_C-api.Plo' tmpdepfile='$(DEPDIR)/SND_C-api.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_C-api.lo `test -f 'intern/SND_C-api.cpp' || echo '$(srcdir)/'`intern/SND_C-api.cpp

SND_CDObject.o: intern/SND_CDObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_CDObject.o -MD -MP -MF "$(DEPDIR)/SND_CDObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_CDObject.o `test -f 'intern/SND_CDObject.cpp' || echo '$(srcdir)/'`intern/SND_CDObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_CDObject.Tpo" "$(DEPDIR)/SND_CDObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_CDObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_CDObject.cpp' object='SND_CDObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_CDObject.Po' tmpdepfile='$(DEPDIR)/SND_CDObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_CDObject.o `test -f 'intern/SND_CDObject.cpp' || echo '$(srcdir)/'`intern/SND_CDObject.cpp

SND_CDObject.obj: intern/SND_CDObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_CDObject.obj -MD -MP -MF "$(DEPDIR)/SND_CDObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_CDObject.obj `if test -f 'intern/SND_CDObject.cpp'; then $(CYGPATH_W) 'intern/SND_CDObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_CDObject.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_CDObject.Tpo" "$(DEPDIR)/SND_CDObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_CDObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_CDObject.cpp' object='SND_CDObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_CDObject.Po' tmpdepfile='$(DEPDIR)/SND_CDObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_CDObject.obj `if test -f 'intern/SND_CDObject.cpp'; then $(CYGPATH_W) 'intern/SND_CDObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_CDObject.cpp'`

SND_CDObject.lo: intern/SND_CDObject.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_CDObject.lo -MD -MP -MF "$(DEPDIR)/SND_CDObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_CDObject.lo `test -f 'intern/SND_CDObject.cpp' || echo '$(srcdir)/'`intern/SND_CDObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_CDObject.Tpo" "$(DEPDIR)/SND_CDObject.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_CDObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_CDObject.cpp' object='SND_CDObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_CDObject.Plo' tmpdepfile='$(DEPDIR)/SND_CDObject.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_CDObject.lo `test -f 'intern/SND_CDObject.cpp' || echo '$(srcdir)/'`intern/SND_CDObject.cpp

SND_DeviceManager.o: intern/SND_DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_DeviceManager.o -MD -MP -MF "$(DEPDIR)/SND_DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_DeviceManager.o `test -f 'intern/SND_DeviceManager.cpp' || echo '$(srcdir)/'`intern/SND_DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_DeviceManager.Tpo" "$(DEPDIR)/SND_DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_DeviceManager.cpp' object='SND_DeviceManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_DeviceManager.Po' tmpdepfile='$(DEPDIR)/SND_DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_DeviceManager.o `test -f 'intern/SND_DeviceManager.cpp' || echo '$(srcdir)/'`intern/SND_DeviceManager.cpp

SND_DeviceManager.obj: intern/SND_DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_DeviceManager.obj -MD -MP -MF "$(DEPDIR)/SND_DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_DeviceManager.obj `if test -f 'intern/SND_DeviceManager.cpp'; then $(CYGPATH_W) 'intern/SND_DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_DeviceManager.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_DeviceManager.Tpo" "$(DEPDIR)/SND_DeviceManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_DeviceManager.cpp' object='SND_DeviceManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_DeviceManager.Po' tmpdepfile='$(DEPDIR)/SND_DeviceManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_DeviceManager.obj `if test -f 'intern/SND_DeviceManager.cpp'; then $(CYGPATH_W) 'intern/SND_DeviceManager.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_DeviceManager.cpp'`

SND_DeviceManager.lo: intern/SND_DeviceManager.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_DeviceManager.lo -MD -MP -MF "$(DEPDIR)/SND_DeviceManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_DeviceManager.lo `test -f 'intern/SND_DeviceManager.cpp' || echo '$(srcdir)/'`intern/SND_DeviceManager.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_DeviceManager.Tpo" "$(DEPDIR)/SND_DeviceManager.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_DeviceManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_DeviceManager.cpp' object='SND_DeviceManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_DeviceManager.Plo' tmpdepfile='$(DEPDIR)/SND_DeviceManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_DeviceManager.lo `test -f 'intern/SND_DeviceManager.cpp' || echo '$(srcdir)/'`intern/SND_DeviceManager.cpp

SND_IdObject.o: intern/SND_IdObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_IdObject.o -MD -MP -MF "$(DEPDIR)/SND_IdObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_IdObject.o `test -f 'intern/SND_IdObject.cpp' || echo '$(srcdir)/'`intern/SND_IdObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_IdObject.Tpo" "$(DEPDIR)/SND_IdObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_IdObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_IdObject.cpp' object='SND_IdObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_IdObject.Po' tmpdepfile='$(DEPDIR)/SND_IdObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_IdObject.o `test -f 'intern/SND_IdObject.cpp' || echo '$(srcdir)/'`intern/SND_IdObject.cpp

SND_IdObject.obj: intern/SND_IdObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_IdObject.obj -MD -MP -MF "$(DEPDIR)/SND_IdObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_IdObject.obj `if test -f 'intern/SND_IdObject.cpp'; then $(CYGPATH_W) 'intern/SND_IdObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_IdObject.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_IdObject.Tpo" "$(DEPDIR)/SND_IdObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_IdObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_IdObject.cpp' object='SND_IdObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_IdObject.Po' tmpdepfile='$(DEPDIR)/SND_IdObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_IdObject.obj `if test -f 'intern/SND_IdObject.cpp'; then $(CYGPATH_W) 'intern/SND_IdObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_IdObject.cpp'`

SND_IdObject.lo: intern/SND_IdObject.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_IdObject.lo -MD -MP -MF "$(DEPDIR)/SND_IdObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_IdObject.lo `test -f 'intern/SND_IdObject.cpp' || echo '$(srcdir)/'`intern/SND_IdObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_IdObject.Tpo" "$(DEPDIR)/SND_IdObject.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_IdObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_IdObject.cpp' object='SND_IdObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_IdObject.Plo' tmpdepfile='$(DEPDIR)/SND_IdObject.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_IdObject.lo `test -f 'intern/SND_IdObject.cpp' || echo '$(srcdir)/'`intern/SND_IdObject.cpp

SND_Scene.o: intern/SND_Scene.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Scene.o -MD -MP -MF "$(DEPDIR)/SND_Scene.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Scene.o `test -f 'intern/SND_Scene.cpp' || echo '$(srcdir)/'`intern/SND_Scene.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Scene.Tpo" "$(DEPDIR)/SND_Scene.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Scene.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Scene.cpp' object='SND_Scene.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Scene.Po' tmpdepfile='$(DEPDIR)/SND_Scene.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Scene.o `test -f 'intern/SND_Scene.cpp' || echo '$(srcdir)/'`intern/SND_Scene.cpp

SND_Scene.obj: intern/SND_Scene.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Scene.obj -MD -MP -MF "$(DEPDIR)/SND_Scene.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Scene.obj `if test -f 'intern/SND_Scene.cpp'; then $(CYGPATH_W) 'intern/SND_Scene.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_Scene.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Scene.Tpo" "$(DEPDIR)/SND_Scene.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Scene.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Scene.cpp' object='SND_Scene.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Scene.Po' tmpdepfile='$(DEPDIR)/SND_Scene.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Scene.obj `if test -f 'intern/SND_Scene.cpp'; then $(CYGPATH_W) 'intern/SND_Scene.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_Scene.cpp'`

SND_Scene.lo: intern/SND_Scene.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Scene.lo -MD -MP -MF "$(DEPDIR)/SND_Scene.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Scene.lo `test -f 'intern/SND_Scene.cpp' || echo '$(srcdir)/'`intern/SND_Scene.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Scene.Tpo" "$(DEPDIR)/SND_Scene.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Scene.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Scene.cpp' object='SND_Scene.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Scene.Plo' tmpdepfile='$(DEPDIR)/SND_Scene.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Scene.lo `test -f 'intern/SND_Scene.cpp' || echo '$(srcdir)/'`intern/SND_Scene.cpp

SND_SoundListener.o: intern/SND_SoundListener.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundListener.o -MD -MP -MF "$(DEPDIR)/SND_SoundListener.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundListener.o `test -f 'intern/SND_SoundListener.cpp' || echo '$(srcdir)/'`intern/SND_SoundListener.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundListener.Tpo" "$(DEPDIR)/SND_SoundListener.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundListener.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundListener.cpp' object='SND_SoundListener.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundListener.Po' tmpdepfile='$(DEPDIR)/SND_SoundListener.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundListener.o `test -f 'intern/SND_SoundListener.cpp' || echo '$(srcdir)/'`intern/SND_SoundListener.cpp

SND_SoundListener.obj: intern/SND_SoundListener.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundListener.obj -MD -MP -MF "$(DEPDIR)/SND_SoundListener.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundListener.obj `if test -f 'intern/SND_SoundListener.cpp'; then $(CYGPATH_W) 'intern/SND_SoundListener.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_SoundListener.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundListener.Tpo" "$(DEPDIR)/SND_SoundListener.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundListener.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundListener.cpp' object='SND_SoundListener.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundListener.Po' tmpdepfile='$(DEPDIR)/SND_SoundListener.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundListener.obj `if test -f 'intern/SND_SoundListener.cpp'; then $(CYGPATH_W) 'intern/SND_SoundListener.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_SoundListener.cpp'`

SND_SoundListener.lo: intern/SND_SoundListener.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundListener.lo -MD -MP -MF "$(DEPDIR)/SND_SoundListener.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundListener.lo `test -f 'intern/SND_SoundListener.cpp' || echo '$(srcdir)/'`intern/SND_SoundListener.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundListener.Tpo" "$(DEPDIR)/SND_SoundListener.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundListener.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundListener.cpp' object='SND_SoundListener.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundListener.Plo' tmpdepfile='$(DEPDIR)/SND_SoundListener.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundListener.lo `test -f 'intern/SND_SoundListener.cpp' || echo '$(srcdir)/'`intern/SND_SoundListener.cpp

SND_SoundObject.o: intern/SND_SoundObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundObject.o -MD -MP -MF "$(DEPDIR)/SND_SoundObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundObject.o `test -f 'intern/SND_SoundObject.cpp' || echo '$(srcdir)/'`intern/SND_SoundObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundObject.Tpo" "$(DEPDIR)/SND_SoundObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundObject.cpp' object='SND_SoundObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundObject.Po' tmpdepfile='$(DEPDIR)/SND_SoundObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundObject.o `test -f 'intern/SND_SoundObject.cpp' || echo '$(srcdir)/'`intern/SND_SoundObject.cpp

SND_SoundObject.obj: intern/SND_SoundObject.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundObject.obj -MD -MP -MF "$(DEPDIR)/SND_SoundObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundObject.obj `if test -f 'intern/SND_SoundObject.cpp'; then $(CYGPATH_W) 'intern/SND_SoundObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_SoundObject.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundObject.Tpo" "$(DEPDIR)/SND_SoundObject.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundObject.cpp' object='SND_SoundObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundObject.Po' tmpdepfile='$(DEPDIR)/SND_SoundObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundObject.obj `if test -f 'intern/SND_SoundObject.cpp'; then $(CYGPATH_W) 'intern/SND_SoundObject.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_SoundObject.cpp'`

SND_SoundObject.lo: intern/SND_SoundObject.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_SoundObject.lo -MD -MP -MF "$(DEPDIR)/SND_SoundObject.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_SoundObject.lo `test -f 'intern/SND_SoundObject.cpp' || echo '$(srcdir)/'`intern/SND_SoundObject.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_SoundObject.Tpo" "$(DEPDIR)/SND_SoundObject.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_SoundObject.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_SoundObject.cpp' object='SND_SoundObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_SoundObject.Plo' tmpdepfile='$(DEPDIR)/SND_SoundObject.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_SoundObject.lo `test -f 'intern/SND_SoundObject.cpp' || echo '$(srcdir)/'`intern/SND_SoundObject.cpp

SND_Utils.o: intern/SND_Utils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Utils.o -MD -MP -MF "$(DEPDIR)/SND_Utils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Utils.o `test -f 'intern/SND_Utils.cpp' || echo '$(srcdir)/'`intern/SND_Utils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Utils.Tpo" "$(DEPDIR)/SND_Utils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Utils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Utils.cpp' object='SND_Utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Utils.Po' tmpdepfile='$(DEPDIR)/SND_Utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Utils.o `test -f 'intern/SND_Utils.cpp' || echo '$(srcdir)/'`intern/SND_Utils.cpp

SND_Utils.obj: intern/SND_Utils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Utils.obj -MD -MP -MF "$(DEPDIR)/SND_Utils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Utils.obj `if test -f 'intern/SND_Utils.cpp'; then $(CYGPATH_W) 'intern/SND_Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_Utils.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Utils.Tpo" "$(DEPDIR)/SND_Utils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Utils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Utils.cpp' object='SND_Utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Utils.Po' tmpdepfile='$(DEPDIR)/SND_Utils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Utils.obj `if test -f 'intern/SND_Utils.cpp'; then $(CYGPATH_W) 'intern/SND_Utils.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_Utils.cpp'`

SND_Utils.lo: intern/SND_Utils.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_Utils.lo -MD -MP -MF "$(DEPDIR)/SND_Utils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_Utils.lo `test -f 'intern/SND_Utils.cpp' || echo '$(srcdir)/'`intern/SND_Utils.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_Utils.Tpo" "$(DEPDIR)/SND_Utils.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_Utils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_Utils.cpp' object='SND_Utils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_Utils.Plo' tmpdepfile='$(DEPDIR)/SND_Utils.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_Utils.lo `test -f 'intern/SND_Utils.cpp' || echo '$(srcdir)/'`intern/SND_Utils.cpp

SND_WaveCache.o: intern/SND_WaveCache.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveCache.o -MD -MP -MF "$(DEPDIR)/SND_WaveCache.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveCache.o `test -f 'intern/SND_WaveCache.cpp' || echo '$(srcdir)/'`intern/SND_WaveCache.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveCache.Tpo" "$(DEPDIR)/SND_WaveCache.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveCache.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveCache.cpp' object='SND_WaveCache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveCache.Po' tmpdepfile='$(DEPDIR)/SND_WaveCache.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveCache.o `test -f 'intern/SND_WaveCache.cpp' || echo '$(srcdir)/'`intern/SND_WaveCache.cpp

SND_WaveCache.obj: intern/SND_WaveCache.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveCache.obj -MD -MP -MF "$(DEPDIR)/SND_WaveCache.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveCache.obj `if test -f 'intern/SND_WaveCache.cpp'; then $(CYGPATH_W) 'intern/SND_WaveCache.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_WaveCache.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveCache.Tpo" "$(DEPDIR)/SND_WaveCache.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveCache.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveCache.cpp' object='SND_WaveCache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveCache.Po' tmpdepfile='$(DEPDIR)/SND_WaveCache.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveCache.obj `if test -f 'intern/SND_WaveCache.cpp'; then $(CYGPATH_W) 'intern/SND_WaveCache.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_WaveCache.cpp'`

SND_WaveCache.lo: intern/SND_WaveCache.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveCache.lo -MD -MP -MF "$(DEPDIR)/SND_WaveCache.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveCache.lo `test -f 'intern/SND_WaveCache.cpp' || echo '$(srcdir)/'`intern/SND_WaveCache.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveCache.Tpo" "$(DEPDIR)/SND_WaveCache.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveCache.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveCache.cpp' object='SND_WaveCache.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveCache.Plo' tmpdepfile='$(DEPDIR)/SND_WaveCache.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveCache.lo `test -f 'intern/SND_WaveCache.cpp' || echo '$(srcdir)/'`intern/SND_WaveCache.cpp

SND_WaveSlot.o: intern/SND_WaveSlot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveSlot.o -MD -MP -MF "$(DEPDIR)/SND_WaveSlot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveSlot.o `test -f 'intern/SND_WaveSlot.cpp' || echo '$(srcdir)/'`intern/SND_WaveSlot.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveSlot.Tpo" "$(DEPDIR)/SND_WaveSlot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveSlot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveSlot.cpp' object='SND_WaveSlot.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveSlot.Po' tmpdepfile='$(DEPDIR)/SND_WaveSlot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveSlot.o `test -f 'intern/SND_WaveSlot.cpp' || echo '$(srcdir)/'`intern/SND_WaveSlot.cpp

SND_WaveSlot.obj: intern/SND_WaveSlot.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveSlot.obj -MD -MP -MF "$(DEPDIR)/SND_WaveSlot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveSlot.obj `if test -f 'intern/SND_WaveSlot.cpp'; then $(CYGPATH_W) 'intern/SND_WaveSlot.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_WaveSlot.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveSlot.Tpo" "$(DEPDIR)/SND_WaveSlot.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveSlot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveSlot.cpp' object='SND_WaveSlot.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveSlot.Po' tmpdepfile='$(DEPDIR)/SND_WaveSlot.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveSlot.obj `if test -f 'intern/SND_WaveSlot.cpp'; then $(CYGPATH_W) 'intern/SND_WaveSlot.cpp'; else $(CYGPATH_W) '$(srcdir)/intern/SND_WaveSlot.cpp'`

SND_WaveSlot.lo: intern/SND_WaveSlot.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_WaveSlot.lo -MD -MP -MF "$(DEPDIR)/SND_WaveSlot.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_WaveSlot.lo `test -f 'intern/SND_WaveSlot.cpp' || echo '$(srcdir)/'`intern/SND_WaveSlot.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_WaveSlot.Tpo" "$(DEPDIR)/SND_WaveSlot.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_WaveSlot.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='intern/SND_WaveSlot.cpp' object='SND_WaveSlot.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_WaveSlot.Plo' tmpdepfile='$(DEPDIR)/SND_WaveSlot.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_WaveSlot.lo `test -f 'intern/SND_WaveSlot.cpp' || echo '$(srcdir)/'`intern/SND_WaveSlot.cpp

SND_OpenALDevice.o: openal/SND_OpenALDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_OpenALDevice.o -MD -MP -MF "$(DEPDIR)/SND_OpenALDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_OpenALDevice.o `test -f 'openal/SND_OpenALDevice.cpp' || echo '$(srcdir)/'`openal/SND_OpenALDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_OpenALDevice.Tpo" "$(DEPDIR)/SND_OpenALDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_OpenALDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/SND_OpenALDevice.cpp' object='SND_OpenALDevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_OpenALDevice.Po' tmpdepfile='$(DEPDIR)/SND_OpenALDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_OpenALDevice.o `test -f 'openal/SND_OpenALDevice.cpp' || echo '$(srcdir)/'`openal/SND_OpenALDevice.cpp

SND_OpenALDevice.obj: openal/SND_OpenALDevice.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_OpenALDevice.obj -MD -MP -MF "$(DEPDIR)/SND_OpenALDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_OpenALDevice.obj `if test -f 'openal/SND_OpenALDevice.cpp'; then $(CYGPATH_W) 'openal/SND_OpenALDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/openal/SND_OpenALDevice.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_OpenALDevice.Tpo" "$(DEPDIR)/SND_OpenALDevice.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_OpenALDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/SND_OpenALDevice.cpp' object='SND_OpenALDevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_OpenALDevice.Po' tmpdepfile='$(DEPDIR)/SND_OpenALDevice.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_OpenALDevice.obj `if test -f 'openal/SND_OpenALDevice.cpp'; then $(CYGPATH_W) 'openal/SND_OpenALDevice.cpp'; else $(CYGPATH_W) '$(srcdir)/openal/SND_OpenALDevice.cpp'`

SND_OpenALDevice.lo: openal/SND_OpenALDevice.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SND_OpenALDevice.lo -MD -MP -MF "$(DEPDIR)/SND_OpenALDevice.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SND_OpenALDevice.lo `test -f 'openal/SND_OpenALDevice.cpp' || echo '$(srcdir)/'`openal/SND_OpenALDevice.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SND_OpenALDevice.Tpo" "$(DEPDIR)/SND_OpenALDevice.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SND_OpenALDevice.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/SND_OpenALDevice.cpp' object='SND_OpenALDevice.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SND_OpenALDevice.Plo' tmpdepfile='$(DEPDIR)/SND_OpenALDevice.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SND_OpenALDevice.lo `test -f 'openal/SND_OpenALDevice.cpp' || echo '$(srcdir)/'`openal/SND_OpenALDevice.cpp

pthread_cancel.o: openal/pthread_cancel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pthread_cancel.o -MD -MP -MF "$(DEPDIR)/pthread_cancel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pthread_cancel.o `test -f 'openal/pthread_cancel.cpp' || echo '$(srcdir)/'`openal/pthread_cancel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pthread_cancel.Tpo" "$(DEPDIR)/pthread_cancel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pthread_cancel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/pthread_cancel.cpp' object='pthread_cancel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pthread_cancel.Po' tmpdepfile='$(DEPDIR)/pthread_cancel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pthread_cancel.o `test -f 'openal/pthread_cancel.cpp' || echo '$(srcdir)/'`openal/pthread_cancel.cpp

pthread_cancel.obj: openal/pthread_cancel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pthread_cancel.obj -MD -MP -MF "$(DEPDIR)/pthread_cancel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pthread_cancel.obj `if test -f 'openal/pthread_cancel.cpp'; then $(CYGPATH_W) 'openal/pthread_cancel.cpp'; else $(CYGPATH_W) '$(srcdir)/openal/pthread_cancel.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pthread_cancel.Tpo" "$(DEPDIR)/pthread_cancel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pthread_cancel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/pthread_cancel.cpp' object='pthread_cancel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pthread_cancel.Po' tmpdepfile='$(DEPDIR)/pthread_cancel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pthread_cancel.obj `if test -f 'openal/pthread_cancel.cpp'; then $(CYGPATH_W) 'openal/pthread_cancel.cpp'; else $(CYGPATH_W) '$(srcdir)/openal/pthread_cancel.cpp'`

pthread_cancel.lo: openal/pthread_cancel.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pthread_cancel.lo -MD -MP -MF "$(DEPDIR)/pthread_cancel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o pthread_cancel.lo `test -f 'openal/pthread_cancel.cpp' || echo '$(srcdir)/'`openal/pthread_cancel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/pthread_cancel.Tpo" "$(DEPDIR)/pthread_cancel.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/pthread_cancel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='openal/pthread_cancel.cpp' object='pthread_cancel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/pthread_cancel.Plo' tmpdepfile='$(DEPDIR)/pthread_cancel.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pthread_cancel.lo `test -f 'openal/pthread_cancel.cpp' || echo '$(srcdir)/'`openal/pthread_cancel.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
