# Makefile.in generated by automake 1.7 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BlenderGAME_FALSE = @BlenderGAME_FALSE@
BlenderGAME_TRUE = @BlenderGAME_TRUE@
BlenderOPENAL_FALSE = @BlenderOPENAL_FALSE@
BlenderOPENAL_TRUE = @BlenderOPENAL_TRUE@
BlenderSTATIC_FALSE = @BlenderSTATIC_FALSE@
BlenderSTATIC_TRUE = @BlenderSTATIC_TRUE@
CARBON_FALSE = @CARBON_FALSE@
CARBON_TRUE = @CARBON_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
PYTHONSYSPREFIX = @PYTHONSYSPREFIX@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WIN_FALSE = @WIN_FALSE@
WIN_TRUE = @WIN_TRUE@
X11_FALSE = @X11_FALSE@
X11_TRUE = @X11_TRUE@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
noinst_LIBRARIES = libketsji.a

libketsji_a_SOURCES = \
		KX_CDActuator.cpp \
		KX_Camera.cpp \
		KX_CameraActuator.cpp \
		KX_CameraIpoSGController.cpp \
		KX_ConstraintActuator.cpp \
		KX_ConstraintWrapper.cpp \
		KX_ConvertPhysicsObjects.cpp \
		KX_EmptyObject.cpp \
		KX_GameActuator.cpp \
		KX_GameObject.cpp \
		KX_IPO_SGController.cpp \
		KX_IPhysicsController.cpp \
		KX_IpoActuator.cpp \
		KX_KetsjiEngine.cpp \
		KX_Light.cpp \
		KX_LightIpoSGController.cpp \
		KX_MeshProxy.cpp \
		KX_MotionState.cpp \
		KX_MouseFocusSensor.cpp \
		KX_NearSensor.cpp \
		KX_ObColorIpoSGController.cpp \
		KX_ObjectActuator.cpp \
		KX_OdePhysicsController.cpp \
		KX_OrientationInterpolator.cpp \
		KX_PhysicsObjectWrapper.cpp \
		KX_PositionInterpolator.cpp \
		KX_PyConstraintBinding.cpp \
		KX_PythonInit.cpp \
		KX_RadarSensor.cpp \
		KX_RayEventManager.cpp \
		KX_RaySensor.cpp \
		KX_SCA_AddObjectActuator.cpp \
		KX_SCA_EndObjectActuator.cpp \
		KX_SCA_ReplaceMeshActuator.cpp \
		KX_SG_NodeRelationships.cpp \
		KX_ScalarInterpolator.cpp \
		KX_ScalingInterpolator.cpp \
		KX_Scene.cpp \
		KX_SceneActuator.cpp \
		KX_SoundActuator.cpp \
		KX_SumoPhysicsController.cpp \
		KX_TimeCategoryLogger.cpp \
		KX_TimeLogger.cpp \
		KX_TouchEventManager.cpp \
		KX_TouchSensor.cpp \
		KX_TrackToActuator.cpp \
		KX_VertexProxy.cpp \
		KX_VisibilityActuator.cpp \
		KX_WorldInfo.cpp \
		KX_WorldIpoController.cpp \
		KXNetwork/KX_NetworkEventManager.cpp \
		KXNetwork/KX_NetworkMessageActuator.cpp \
		KXNetwork/KX_NetworkMessageSensor.cpp \
		KXNetwork/KX_NetworkObjectActuator.cpp \
		KXNetwork/KX_NetworkObjectSensor.cpp


INCLUDES = -I$(top_srcdir)/source/gameengine/GameLogic -I$(top_srcdir)/source/gameengine/SoundSystem -I$(top_srcdir)/source/gameengine/Expressions -I$(top_srcdir)/source/gameengine/SceneGraph -I$(top_srcdir)/intern/moto/include -I$(top_srcdir)/intern/string -I@PYTHONSYSPREFIX@/include/python@PYTHON_VERSION@ -I$(top_srcdir)/source/kernel/gen_system -I$(top_srcdir)/source/gameengine/Rasterizer -I$(top_srcdir)/source/gameengine/Physics/common -I$(top_srcdir)/source/gameengine/Network -I$(top_srcdir)/source/gameengine/Physics/BlOde -I$(top_srcdir)/source/gameengine/Ketsji/KXNetwork -I$(top_srcdir)/source/gameengine/Physics/Sumo/Fuzzics/include -I$(top_srcdir)/source/gameengine/Physics/Sumo/include -I$(top_srcdir)/source/gameengine/Physics/Sumo/
subdir = source/gameengine/Ketsji
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libketsji_a_AR = $(AR) cru
libketsji_a_LIBADD =
am_libketsji_a_OBJECTS = KX_CDActuator.$(OBJEXT) KX_Camera.$(OBJEXT) \
	KX_CameraActuator.$(OBJEXT) KX_CameraIpoSGController.$(OBJEXT) \
	KX_ConstraintActuator.$(OBJEXT) KX_ConstraintWrapper.$(OBJEXT) \
	KX_EmptyObject.$(OBJEXT) KX_GameActuator.$(OBJEXT) \
	KX_GameObject.$(OBJEXT) KX_IPO_SGController.$(OBJEXT) \
	KX_IPhysicsController.$(OBJEXT) KX_IpoActuator.$(OBJEXT) \
	KX_KetsjiEngine.$(OBJEXT) KX_Light.$(OBJEXT) \
	KX_LightIpoSGController.$(OBJEXT) KX_MeshProxy.$(OBJEXT) \
	KX_MotionState.$(OBJEXT) KX_MouseFocusSensor.$(OBJEXT) \
	KX_NearSensor.$(OBJEXT) KX_ObColorIpoSGController.$(OBJEXT) \
	KX_ObjectActuator.$(OBJEXT) KX_OdePhysicsController.$(OBJEXT) \
	KX_OrientationInterpolator.$(OBJEXT) \
	KX_PhysicsObjectWrapper.$(OBJEXT) \
	KX_PositionInterpolator.$(OBJEXT) \
	KX_PyConstraintBinding.$(OBJEXT) KX_PythonInit.$(OBJEXT) \
	KX_RadarSensor.$(OBJEXT) KX_RayEventManager.$(OBJEXT) \
	KX_RaySensor.$(OBJEXT) KX_SCA_AddObjectActuator.$(OBJEXT) \
	KX_SCA_EndObjectActuator.$(OBJEXT) \
	KX_SCA_ReplaceMeshActuator.$(OBJEXT) \
	KX_SG_NodeRelationships.$(OBJEXT) \
	KX_ScalarInterpolator.$(OBJEXT) \
	KX_ScalingInterpolator.$(OBJEXT) KX_Scene.$(OBJEXT) \
	KX_SceneActuator.$(OBJEXT) KX_SoundActuator.$(OBJEXT) \
	KX_SumoPhysicsController.$(OBJEXT) \
	KX_TimeCategoryLogger.$(OBJEXT) KX_TimeLogger.$(OBJEXT) \
	KX_TouchEventManager.$(OBJEXT) KX_TouchSensor.$(OBJEXT) \
	KX_TrackToActuator.$(OBJEXT) KX_VertexProxy.$(OBJEXT) \
	KX_VisibilityActuator.$(OBJEXT) KX_WorldInfo.$(OBJEXT) \
	KX_WorldIpoController.$(OBJEXT) \
	KX_NetworkEventManager.$(OBJEXT) \
	KX_NetworkMessageActuator.$(OBJEXT) \
	KX_NetworkMessageSensor.$(OBJEXT) \
	KX_NetworkObjectActuator.$(OBJEXT) \
	KX_NetworkObjectSensor.$(OBJEXT)
libketsji_a_OBJECTS = $(am_libketsji_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/KX_CDActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_Camera.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_CameraActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_CameraIpoSGController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ConstraintActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ConstraintWrapper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_EmptyObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_GameActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_GameObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_IPO_SGController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_IPhysicsController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_IpoActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_KetsjiEngine.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_Light.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_LightIpoSGController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_MeshProxy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_MotionState.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_MouseFocusSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NearSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NetworkEventManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NetworkMessageActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NetworkMessageSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NetworkObjectActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_NetworkObjectSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ObColorIpoSGController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ObjectActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_OdePhysicsController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_OrientationInterpolator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_PhysicsObjectWrapper.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_PositionInterpolator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_PyConstraintBinding.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_PythonInit.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_RadarSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_RayEventManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_RaySensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SCA_AddObjectActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SCA_EndObjectActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SCA_ReplaceMeshActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SG_NodeRelationships.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ScalarInterpolator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_ScalingInterpolator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_Scene.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SceneActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SoundActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_SumoPhysicsController.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_TimeCategoryLogger.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_TimeLogger.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_TouchEventManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_TouchSensor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_TrackToActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_VertexProxy.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_VisibilityActuator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_WorldInfo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KX_WorldIpoController.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libketsji_a_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libketsji_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  source/gameengine/Ketsji/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
KX_NetworkEventManager.$(OBJEXT): KXNetwork/KX_NetworkEventManager.cpp
KX_NetworkMessageActuator.$(OBJEXT): \
	KXNetwork/KX_NetworkMessageActuator.cpp
KX_NetworkMessageSensor.$(OBJEXT): KXNetwork/KX_NetworkMessageSensor.cpp
KX_NetworkObjectActuator.$(OBJEXT): \
	KXNetwork/KX_NetworkObjectActuator.cpp
KX_NetworkObjectSensor.$(OBJEXT): KXNetwork/KX_NetworkObjectSensor.cpp
libketsji.a: $(libketsji_a_OBJECTS) $(libketsji_a_DEPENDENCIES) 
	-rm -f libketsji.a
	$(libketsji_a_AR) libketsji.a $(libketsji_a_OBJECTS) $(libketsji_a_LIBADD)
	$(RANLIB) libketsji.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_CDActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_Camera.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_CameraActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_CameraIpoSGController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ConstraintActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ConstraintWrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_EmptyObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_GameActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_GameObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_IPO_SGController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_IPhysicsController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_IpoActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_KetsjiEngine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_Light.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_LightIpoSGController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_MeshProxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_MotionState.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_MouseFocusSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NearSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NetworkEventManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NetworkMessageActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NetworkMessageSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NetworkObjectActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_NetworkObjectSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ObColorIpoSGController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ObjectActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_OdePhysicsController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_OrientationInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_PhysicsObjectWrapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_PositionInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_PyConstraintBinding.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_PythonInit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_RadarSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_RayEventManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_RaySensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SCA_AddObjectActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SCA_EndObjectActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SCA_ReplaceMeshActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SG_NodeRelationships.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ScalarInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_ScalingInterpolator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_Scene.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SceneActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SoundActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_SumoPhysicsController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_TimeCategoryLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_TimeLogger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_TouchEventManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_TouchSensor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_TrackToActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_VertexProxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_VisibilityActuator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_WorldInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KX_WorldIpoController.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

KX_NetworkEventManager.o: KXNetwork/KX_NetworkEventManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkEventManager.o -MD -MP -MF "$(DEPDIR)/KX_NetworkEventManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkEventManager.o `test -f 'KXNetwork/KX_NetworkEventManager.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkEventManager.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkEventManager.Tpo" "$(DEPDIR)/KX_NetworkEventManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkEventManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkEventManager.cpp' object='KX_NetworkEventManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkEventManager.Po' tmpdepfile='$(DEPDIR)/KX_NetworkEventManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkEventManager.o `test -f 'KXNetwork/KX_NetworkEventManager.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkEventManager.cpp

KX_NetworkEventManager.obj: KXNetwork/KX_NetworkEventManager.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkEventManager.obj -MD -MP -MF "$(DEPDIR)/KX_NetworkEventManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkEventManager.obj `if test -f 'KXNetwork/KX_NetworkEventManager.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkEventManager.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkEventManager.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkEventManager.Tpo" "$(DEPDIR)/KX_NetworkEventManager.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkEventManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkEventManager.cpp' object='KX_NetworkEventManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkEventManager.Po' tmpdepfile='$(DEPDIR)/KX_NetworkEventManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkEventManager.obj `if test -f 'KXNetwork/KX_NetworkEventManager.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkEventManager.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkEventManager.cpp'`

KX_NetworkEventManager.lo: KXNetwork/KX_NetworkEventManager.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkEventManager.lo -MD -MP -MF "$(DEPDIR)/KX_NetworkEventManager.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkEventManager.lo `test -f 'KXNetwork/KX_NetworkEventManager.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkEventManager.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkEventManager.Tpo" "$(DEPDIR)/KX_NetworkEventManager.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkEventManager.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkEventManager.cpp' object='KX_NetworkEventManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkEventManager.Plo' tmpdepfile='$(DEPDIR)/KX_NetworkEventManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkEventManager.lo `test -f 'KXNetwork/KX_NetworkEventManager.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkEventManager.cpp

KX_NetworkMessageActuator.o: KXNetwork/KX_NetworkMessageActuator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageActuator.o -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageActuator.o `test -f 'KXNetwork/KX_NetworkMessageActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageActuator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" "$(DEPDIR)/KX_NetworkMessageActuator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageActuator.cpp' object='KX_NetworkMessageActuator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageActuator.Po' tmpdepfile='$(DEPDIR)/KX_NetworkMessageActuator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageActuator.o `test -f 'KXNetwork/KX_NetworkMessageActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageActuator.cpp

KX_NetworkMessageActuator.obj: KXNetwork/KX_NetworkMessageActuator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageActuator.obj -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageActuator.obj `if test -f 'KXNetwork/KX_NetworkMessageActuator.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkMessageActuator.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkMessageActuator.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" "$(DEPDIR)/KX_NetworkMessageActuator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageActuator.cpp' object='KX_NetworkMessageActuator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageActuator.Po' tmpdepfile='$(DEPDIR)/KX_NetworkMessageActuator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageActuator.obj `if test -f 'KXNetwork/KX_NetworkMessageActuator.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkMessageActuator.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkMessageActuator.cpp'`

KX_NetworkMessageActuator.lo: KXNetwork/KX_NetworkMessageActuator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageActuator.lo -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageActuator.lo `test -f 'KXNetwork/KX_NetworkMessageActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageActuator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageActuator.Tpo" "$(DEPDIR)/KX_NetworkMessageActuator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageActuator.cpp' object='KX_NetworkMessageActuator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageActuator.Plo' tmpdepfile='$(DEPDIR)/KX_NetworkMessageActuator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageActuator.lo `test -f 'KXNetwork/KX_NetworkMessageActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageActuator.cpp

KX_NetworkMessageSensor.o: KXNetwork/KX_NetworkMessageSensor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageSensor.o -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageSensor.o `test -f 'KXNetwork/KX_NetworkMessageSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageSensor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" "$(DEPDIR)/KX_NetworkMessageSensor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageSensor.cpp' object='KX_NetworkMessageSensor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageSensor.Po' tmpdepfile='$(DEPDIR)/KX_NetworkMessageSensor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageSensor.o `test -f 'KXNetwork/KX_NetworkMessageSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageSensor.cpp

KX_NetworkMessageSensor.obj: KXNetwork/KX_NetworkMessageSensor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageSensor.obj -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageSensor.obj `if test -f 'KXNetwork/KX_NetworkMessageSensor.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkMessageSensor.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkMessageSensor.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" "$(DEPDIR)/KX_NetworkMessageSensor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageSensor.cpp' object='KX_NetworkMessageSensor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageSensor.Po' tmpdepfile='$(DEPDIR)/KX_NetworkMessageSensor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageSensor.obj `if test -f 'KXNetwork/KX_NetworkMessageSensor.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkMessageSensor.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkMessageSensor.cpp'`

KX_NetworkMessageSensor.lo: KXNetwork/KX_NetworkMessageSensor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkMessageSensor.lo -MD -MP -MF "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkMessageSensor.lo `test -f 'KXNetwork/KX_NetworkMessageSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageSensor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkMessageSensor.Tpo" "$(DEPDIR)/KX_NetworkMessageSensor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkMessageSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkMessageSensor.cpp' object='KX_NetworkMessageSensor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkMessageSensor.Plo' tmpdepfile='$(DEPDIR)/KX_NetworkMessageSensor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkMessageSensor.lo `test -f 'KXNetwork/KX_NetworkMessageSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkMessageSensor.cpp

KX_NetworkObjectActuator.o: KXNetwork/KX_NetworkObjectActuator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectActuator.o -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectActuator.o `test -f 'KXNetwork/KX_NetworkObjectActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectActuator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" "$(DEPDIR)/KX_NetworkObjectActuator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectActuator.cpp' object='KX_NetworkObjectActuator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectActuator.Po' tmpdepfile='$(DEPDIR)/KX_NetworkObjectActuator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectActuator.o `test -f 'KXNetwork/KX_NetworkObjectActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectActuator.cpp

KX_NetworkObjectActuator.obj: KXNetwork/KX_NetworkObjectActuator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectActuator.obj -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectActuator.obj `if test -f 'KXNetwork/KX_NetworkObjectActuator.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkObjectActuator.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkObjectActuator.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" "$(DEPDIR)/KX_NetworkObjectActuator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectActuator.cpp' object='KX_NetworkObjectActuator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectActuator.Po' tmpdepfile='$(DEPDIR)/KX_NetworkObjectActuator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectActuator.obj `if test -f 'KXNetwork/KX_NetworkObjectActuator.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkObjectActuator.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkObjectActuator.cpp'`

KX_NetworkObjectActuator.lo: KXNetwork/KX_NetworkObjectActuator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectActuator.lo -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectActuator.lo `test -f 'KXNetwork/KX_NetworkObjectActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectActuator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectActuator.Tpo" "$(DEPDIR)/KX_NetworkObjectActuator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectActuator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectActuator.cpp' object='KX_NetworkObjectActuator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectActuator.Plo' tmpdepfile='$(DEPDIR)/KX_NetworkObjectActuator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectActuator.lo `test -f 'KXNetwork/KX_NetworkObjectActuator.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectActuator.cpp

KX_NetworkObjectSensor.o: KXNetwork/KX_NetworkObjectSensor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectSensor.o -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectSensor.o `test -f 'KXNetwork/KX_NetworkObjectSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectSensor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" "$(DEPDIR)/KX_NetworkObjectSensor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectSensor.cpp' object='KX_NetworkObjectSensor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectSensor.Po' tmpdepfile='$(DEPDIR)/KX_NetworkObjectSensor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectSensor.o `test -f 'KXNetwork/KX_NetworkObjectSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectSensor.cpp

KX_NetworkObjectSensor.obj: KXNetwork/KX_NetworkObjectSensor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectSensor.obj -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectSensor.obj `if test -f 'KXNetwork/KX_NetworkObjectSensor.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkObjectSensor.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkObjectSensor.cpp'`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" "$(DEPDIR)/KX_NetworkObjectSensor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectSensor.cpp' object='KX_NetworkObjectSensor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectSensor.Po' tmpdepfile='$(DEPDIR)/KX_NetworkObjectSensor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectSensor.obj `if test -f 'KXNetwork/KX_NetworkObjectSensor.cpp'; then $(CYGPATH_W) 'KXNetwork/KX_NetworkObjectSensor.cpp'; else $(CYGPATH_W) '$(srcdir)/KXNetwork/KX_NetworkObjectSensor.cpp'`

KX_NetworkObjectSensor.lo: KXNetwork/KX_NetworkObjectSensor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KX_NetworkObjectSensor.lo -MD -MP -MF "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KX_NetworkObjectSensor.lo `test -f 'KXNetwork/KX_NetworkObjectSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectSensor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KX_NetworkObjectSensor.Tpo" "$(DEPDIR)/KX_NetworkObjectSensor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KX_NetworkObjectSensor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='KXNetwork/KX_NetworkObjectSensor.cpp' object='KX_NetworkObjectSensor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KX_NetworkObjectSensor.Plo' tmpdepfile='$(DEPDIR)/KX_NetworkObjectSensor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KX_NetworkObjectSensor.lo `test -f 'KXNetwork/KX_NetworkObjectSensor.cpp' || echo '$(srcdir)/'`KXNetwork/KX_NetworkObjectSensor.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
